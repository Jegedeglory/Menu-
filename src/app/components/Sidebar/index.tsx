"use client"
import React, {useState, useEffect} from "react";
import styles from "./sidebar.module.css";
import Link from "next/link";
import { useRouter } from "next/navigation"; 
import AuthService from "../../login/authservice";
import Logo from "../../images/Logo.png";

type IconName = 'home' | 'favorite' | 'settings' | 'profile' | 'sign-out';

export const SideBar = () => {
    const [isMobile, setIsMobile] = useState(false);
    const [selectedIcon, setSelectedIcon] = useState<IconName | null>(null);
    const router = useRouter();


    const handleIconClick = (icon: IconName) => {
        setSelectedIcon(icon);

        if (icon === "sign-out") {
            AuthService.logout(); 
            router.push('/'); // Redirect to the home page
        }
    };

    useEffect(() => {
        const handleResize = () => {
            setIsMobile(window.innerWidth <= 768);
        };

        window.addEventListener("resize", handleResize);

        // Set the initial state
        handleResize();

        // Cleanup event listener on unmount
        return () => window.removeEventListener("resize", handleResize);
    }, []);
    return (
        <>
        <div className={styles.sidebar}>
            <div className={styles.sidebar_Content}>
            {!isMobile && (
                    <Link href="/">
                        <span className={styles.Logo}>
                            <div>
                                <img src={Logo.src} alt="Logo" />
                            </div>
                        </span>
                    </Link>
                )}
                <Link href="/">
                    <div onClick={() => handleIconClick("home")}>
                    <svg width="19" height="18" viewBox="0 0 19 18" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M10.9844 0.5625C10.4648 0.5625 10.0938 0.970703 10.0938 1.45312V7.39062C10.0938 7.91016 10.4648 8.28125 10.9844 8.28125H18.1094C18.5918 8.28125 19 7.91016 19 7.39062V1.45312C19 0.970703 18.5918 0.5625 18.1094 0.5625H10.9844ZM8.01562 0.5625H0.890625C0.371094 0.5625 0 0.970703 0 1.45312V7.39062C0 7.91016 0.371094 8.28125 0.890625 8.28125H8.01562C8.49805 8.28125 8.90625 7.91016 8.90625 7.39062V1.45312C8.90625 0.970703 8.49805 0.5625 8.01562 0.5625ZM0 10.3594V16.2969C0 16.8164 0.371094 17.1875 0.890625 17.1875H8.01562C8.49805 17.1875 8.90625 16.8164 8.90625 16.2969V10.3594C8.90625 9.87695 8.49805 9.46875 8.01562 9.46875H0.890625C0.371094 9.46875 0 9.87695 0 10.3594ZM10.9844 17.1875H18.1094C18.5918 17.1875 19 16.8164 19 16.2969V10.3594C19 9.87695 18.5918 9.46875 18.1094 9.46875H10.9844C10.4648 9.46875 10.0938 9.87695 10.0938 10.3594V16.2969C10.0938 16.8164 10.4648 17.1875 10.9844 17.1875Z" fill={selectedIcon === 'home' ?  '#6F4FF2' :'#65646A' }/>
</svg>
                    </div>
                </Link>
                <Link href="/profile">
                <div onClick={() => handleIconClick("profile")}>
                    <svg width="19" height="20" viewBox="0 0 19 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.20312 4.23438C7.23633 4.23438 5.64062 5.83008 5.64062 7.79688C5.64062 9.76367 7.23633 11.3594 9.20312 11.3594C11.1699 11.3594 12.7656 9.76367 12.7656 7.79688C12.7656 5.83008 11.1699 4.23438 9.20312 4.23438ZM9.20312 9.57812C8.20117 9.57812 7.42188 8.79883 7.42188 7.79688C7.42188 6.83203 8.20117 6.01562 9.20312 6.01562C10.168 6.01562 10.9844 6.83203 10.9844 7.79688C10.9844 8.79883 10.168 9.57812 9.20312 9.57812ZM9.20312 0.671875C4.11914 0.671875 0 4.79102 0 9.875C0 14.959 4.11914 19.0781 9.20312 19.0781C14.2871 19.0781 18.4062 14.959 18.4062 9.875C18.4062 4.79102 14.2871 0.671875 9.20312 0.671875ZM9.20312 17.2969C7.34766 17.2969 5.64062 16.6289 4.3418 15.5156C4.89844 14.6621 5.86328 14.0684 6.93945 14.0684C7.71875 14.291 8.46094 14.4023 9.20312 14.4023C9.9082 14.4023 10.6504 14.291 11.4297 14.0684C12.5059 14.1055 13.4707 14.6621 14.0273 15.5156C12.7285 16.6289 11.0215 17.2969 9.20312 17.2969ZM15.2148 14.1797C14.3242 13.0293 12.9141 12.25 11.3184 12.25C10.9473 12.25 10.3535 12.6211 9.20312 12.6211C8.01562 12.6211 7.42188 12.25 7.05078 12.25C5.45508 12.25 4.04492 13.0293 3.1543 14.1797C2.26367 12.9922 1.78125 11.5078 1.78125 9.875C1.78125 5.79297 5.08398 2.45312 9.20312 2.45312C13.2852 2.45312 16.625 5.79297 16.625 9.875C16.625 11.5078 16.1055 12.9922 15.2148 14.1797Z" fill={selectedIcon === 'profile' ?  '#6F4FF2' :'#65646A' }/>
</svg>


                    </div>
                </Link>
                <Link href="/favorite">
                <div onClick={() => handleIconClick("favorite")}>
                <svg width="20" height="20" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
<g id="bytesize:heart">
<path id="Vector" d="M5 20C1.25 15 2.5 7.49996 8.75 4.99996C15 2.49996 18.75 7.49996 20 9.99996C21.25 7.49996 26.25 2.49996 32.5 4.99996C38.75 7.49996 38.75 15 35 20C31.25 25 20 35 20 35C20 35 8.75 25 5 20Z" stroke={selectedIcon === 'settings' ? '#6F4FF2' :'#65646A' } stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</g>
</svg>


                    </div>
                </Link>
                <Link href="/settings">
                <div onClick={() => handleIconClick("settings")}>
                    <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M2.10209 8.12132C2.50849 6.86652 3.17577 5.71191 4.06009 4.73332C4.13324 4.65248 4.22876 4.59521 4.33452 4.56877C4.44028 4.54233 4.55151 4.54791 4.65409 4.58482L6.76389 5.33942C6.91409 5.39305 7.07415 5.41338 7.23299 5.399C7.39182 5.38462 7.54563 5.33588 7.68376 5.25614C7.82188 5.17641 7.94101 5.06759 8.0329 4.93724C8.12478 4.80688 8.18722 4.6581 8.21589 4.50122L8.61849 2.29462C8.63794 2.1872 8.68891 2.088 8.76491 2.00964C8.84092 1.93129 8.93852 1.87732 9.04529 1.85462C10.3339 1.57914 11.6661 1.57914 12.9547 1.85462C13.0615 1.87732 13.1591 1.93129 13.2351 2.00964C13.3111 2.088 13.362 2.1872 13.3815 2.29462L13.7841 4.50122C13.8128 4.6581 13.8752 4.80688 13.9671 4.93724C14.059 5.06759 14.1781 5.17641 14.3162 5.25614C14.4544 5.33588 14.6082 5.38462 14.767 5.399C14.9258 5.41338 15.0859 5.39305 15.2361 5.33942L17.347 4.58482C17.4497 4.54804 17.561 4.54263 17.6667 4.56927C17.7725 4.59591 17.868 4.65339 17.941 4.73442C18.8252 5.71268 19.4925 6.86691 19.899 8.12132C19.9324 8.22505 19.9342 8.33636 19.9043 8.44114C19.8743 8.54592 19.8139 8.63943 19.7307 8.70982L18.0202 10.1618C17.8987 10.2651 17.8011 10.3935 17.7341 10.5383C17.6672 10.683 17.6325 10.8406 17.6325 11C17.6325 11.1595 17.6672 11.317 17.7341 11.4618C17.8011 11.6065 17.8987 11.735 18.0202 11.8382L19.7307 13.2902C19.8137 13.3607 19.8739 13.4543 19.9037 13.5591C19.9334 13.6638 19.9314 13.7751 19.8979 13.8787C19.4915 15.1335 18.8242 16.2881 17.9399 17.2667C17.8667 17.3476 17.7712 17.4048 17.6655 17.4313C17.5597 17.4577 17.4485 17.4521 17.3459 17.4152L15.2361 16.6606C15.0859 16.607 14.9258 16.5867 14.767 16.601C14.6082 16.6154 14.4544 16.6642 14.3162 16.7439C14.1781 16.8236 14.059 16.9324 13.9671 17.0628C13.8752 17.1932 13.8128 17.3419 13.7841 17.4988L13.3815 19.7065C13.3619 19.8137 13.3108 19.9127 13.2348 19.9908C13.1588 20.069 13.0613 20.1228 12.9547 20.1454C11.6661 20.4209 10.3339 20.4209 9.04529 20.1454C8.93852 20.1227 8.84092 20.0687 8.76491 19.9904C8.68891 19.912 8.63794 19.8128 8.61849 19.7054L8.21589 17.4988C8.18722 17.3419 8.12478 17.1932 8.0329 17.0628C7.94101 16.9324 7.82188 16.8236 7.68376 16.7439C7.54563 16.6642 7.39182 16.6154 7.23299 16.601C7.07415 16.5867 6.91409 16.607 6.76389 16.6606L4.65409 17.4152C4.55141 17.452 4.44011 17.4574 4.33434 17.4308C4.22857 17.4041 4.13311 17.3466 4.06009 17.2656C3.1759 16.2874 2.50863 15.1331 2.10209 13.8787C2.06856 13.7751 2.06655 13.6638 2.09632 13.5591C2.12608 13.4543 2.18629 13.3607 2.26929 13.2902L3.97979 11.8382C4.1013 11.735 4.19891 11.6065 4.26585 11.4618C4.33279 11.317 4.36746 11.1595 4.36746 11C4.36746 10.8406 4.33279 10.683 4.26585 10.5383C4.19891 10.3935 4.1013 10.2651 3.97979 10.1618L2.26929 8.70982C2.18629 8.6393 2.12608 8.54573 2.09632 8.44096C2.06655 8.33619 2.06856 8.22494 2.10209 8.12132ZM3.26809 8.11472L4.69149 9.32252C4.93489 9.52904 5.13043 9.78606 5.26454 10.0757C5.39865 10.3654 5.46812 10.6808 5.46812 11C5.46812 11.3192 5.39865 11.6346 5.26454 11.9243C5.13043 12.214 4.93489 12.471 4.69149 12.6775L3.26919 13.8853C3.59039 14.7455 4.05349 15.5463 4.63759 16.2525L6.39319 15.6255C6.50686 15.5852 6.62236 15.554 6.73969 15.532C7.31368 15.4275 7.9057 15.5552 8.38552 15.8871C8.86535 16.219 9.19368 16.7279 9.29829 17.3019L9.63269 19.1378C10.538 19.2879 11.4619 19.2879 12.3673 19.1378L12.7017 17.3008C12.7587 16.9867 12.8833 16.6888 13.0671 16.4278C13.2509 16.1668 13.4893 15.9489 13.7657 15.7894C14.0422 15.6298 14.3501 15.5324 14.6681 15.5039C14.986 15.4755 15.3064 15.5166 15.6068 15.6244L17.3624 16.2525C17.9474 15.5451 18.4103 14.7451 18.7319 13.8853L17.3085 12.6775C17.0648 12.4712 16.8689 12.2143 16.7346 11.9245C16.6003 11.6348 16.5307 11.3193 16.5307 11C16.5307 10.6807 16.6003 10.3652 16.7346 10.0755C16.8689 9.78578 17.0648 9.52883 17.3085 9.32252L18.7319 8.11472C18.4103 7.25495 17.9474 6.4549 17.3624 5.74752L15.6068 6.37452C15.3064 6.48178 14.9863 6.52245 14.6686 6.49369C14.3509 6.46493 14.0433 6.36744 13.7671 6.20797C13.4908 6.0485 13.2526 5.83087 13.0688 5.57016C12.885 5.30945 12.7601 5.01189 12.7028 4.69812L12.3673 2.86222C11.4619 2.71212 10.538 2.71212 9.63269 2.86222L9.29829 4.69812C9.24109 5.01199 9.11631 5.30966 8.9326 5.5705C8.74888 5.83134 8.51063 6.0491 8.23437 6.20869C7.95811 6.36827 7.65044 6.46586 7.33271 6.49468C7.01497 6.52351 6.69476 6.48288 6.39429 6.37562L4.63759 5.74752C4.05297 6.45498 3.58938 7.25503 3.26809 8.11472ZM8.25219 11C8.25219 10.2707 8.54192 9.5712 9.05765 9.05547C9.57337 8.53975 10.2728 8.25002 11.0022 8.25002C11.7315 8.25002 12.431 8.53975 12.9467 9.05547C13.4625 9.5712 13.7522 10.2707 13.7522 11C13.7522 11.7294 13.4625 12.4288 12.9467 12.9446C12.431 13.4603 11.7315 13.75 11.0022 13.75C10.2728 13.75 9.57337 13.4603 9.05765 12.9446C8.54192 12.4288 8.25219 11.7294 8.25219 11ZM9.35219 11C9.35219 11.4376 9.52603 11.8573 9.83547 12.1667C10.1449 12.4762 10.5646 12.65 11.0022 12.65C11.4398 12.65 11.8595 12.4762 12.1689 12.1667C12.4784 11.8573 12.6522 11.4376 12.6522 11C12.6522 10.5624 12.4784 10.1427 12.1689 9.83329C11.8595 9.52386 11.4398 9.35002 11.0022 9.35002C10.5646 9.35002 10.1449 9.52386 9.83547 9.83329C9.52603 10.1427 9.35219 10.5624 9.35219 11Z" fill={selectedIcon === 'settings' ? '#6F4FF2' :'#65646A' }/>
</svg>

                    </div>
                </Link>
            </div>
            <Link href="#">
                <div onClick={() => handleIconClick("sign-out")}>
                <svg width="30" height="20" viewBox="0 0 19 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M18.4434 8.50586C18.7773 8.17188 18.7773 7.61523 18.4434 7.24414L12.209 1.00977C11.6152 0.453125 10.6875 0.861328 10.6875 1.64062V5.20312H5.64062C5.12109 5.20312 4.75 5.61133 4.75 6.09375V9.65625C4.75 10.1758 5.12109 10.5469 5.64062 10.5469H10.6875V14.1094C10.6875 14.9258 11.6523 15.2969 12.209 14.7402L18.4434 8.50586ZM7.125 14.5547V13.0703C7.125 12.8477 6.90234 12.625 6.67969 12.625H3.5625C2.89453 12.625 2.375 12.1055 2.375 11.4375V4.3125C2.375 3.68164 2.89453 3.125 3.5625 3.125H6.67969C6.90234 3.125 7.125 2.93945 7.125 2.67969V1.19531C7.125 0.972656 6.90234 0.75 6.67969 0.75H3.5625C1.5957 0.75 0 2.3457 0 4.3125V11.4375C0 13.4043 1.5957 15 3.5625 15H6.67969C6.90234 15 7.125 14.8145 7.125 14.5547Z" fill={selectedIcon === 'sign-out' ? '#6F4FF2' :'#65646A'}/>
</svg>
                    </div>
                </Link>
        </div>
    </>
    )
}